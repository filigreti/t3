import { type NextPage } from "next";
import { SignIn, useUser, SignInButton, SignOutButton } from "@clerk/nextjs";
import {} from "@clerk/nextjs";
import Head from "next/head";
import Link from "next/link";
import dayjs from "dayjs";
import relativeTime from "dayjs/plugin/relativeTime";
import { LoadingPage } from "~/components/Loader";

dayjs.extend(relativeTime);

import { RouterOutputs, api } from "~/utils/api";
import Image from "next/image";

type UserPost = RouterOutputs["posts"]["getAll"][number];

const PostView = (props: UserPost) => {
  const { post, author } = props;
  console.log("author", author);
  return (
    <div className=" flex items-center" key={post?.id}>
      <Image
        className="h-10 w-10 rounded"
        src={author.profileImageUrl}
        alt=""
        width={46}
        height={46}
      />

      <div>
        <div className=" flex gap-1 text-sm text-slate-400">
          <div>@{author.username}</div>
          <div>Â·</div>
          <div className=" capitalize">{dayjs(post.createdAt).fromNow()}</div>
        </div>
        <div>{post?.content}</div>
      </div>
    </div>
  );
};

const Feed = () => {
  const { data, isLoading: postLoading } = api.posts.getAll.useQuery();
  if (postLoading) return <LoadingPage />;
  if (!data) return <div>no data</div>;

  return (
    <div>
      {data?.map((fullPost) => (
        <PostView {...fullPost} key={fullPost.post.id} />
      ))}
    </div>
  );
};

const Home: NextPage = () => {
  const { isLoaded: userLoaded, isSignedIn } = useUser();
  api.posts.getAll.useQuery();
  if (!userLoaded) return <div />;
  const CreatePostWizard = () => {
    const { user } = useUser();
    if (!user) return null;
    return (
      <div className="flex gap-4">
        <Image
          className=" rounded"
          src={user.profileImageUrl}
          alt=""
          width={46}
          height={46}
        />
        <input
          type="text"
          className="flex-grow   bg-transparent outline-none"
          placeholder="Search"
        />
      </div>
    );
  };

  return (
    <>
      <Head>
        <title>Create T3 App</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main>
        <div className=" mx-auto md:max-w-2xl">
          <div className=" border p-4">
            {!isSignedIn && <SignInButton />}
            {!!isSignedIn && <CreatePostWizard />}
            <SignIn path="/sign-in" routing="path" signUpUrl="/sign-up" />
          </div>
          <Feed />
        </div>
      </main>
    </>
  );
};

export default Home;
